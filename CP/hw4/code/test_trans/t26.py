
*** Source Program **
def perm(a, n):
    if (n == 0):
        return []

    if (n == 1):
        return [[x] for x in a]

    if (n > 1):
        b = perm(a, (n - 1))
        l = []
        return [([x] + y) for x in a for y in b]


print(perm([1,2,3,4], 1))
print(perm([1,2,3,4], 2))
print(perm([1,2,3,4], 3))
print(perm([1,2,3,4], 4))


*** Target Program **
 158 : def perm(a, n)
       5 : .t3 = n
       6 : .t4 = 0
       7 : .t2 = .t3 == .t4
      16 : if .t2 goto 10
      15 : goto 11
      10 : SKIP
       8 : .t5 = []
       9 : return .t5
      14 : goto 12
      11 : SKIP
      13 : goto 12
      12 : SKIP
      17 : .t7 = n
      18 : .t8 = 1
      19 : .t6 = .t7 == .t8
      66 : if .t6 goto 60
      65 : goto 61
      60 : SKIP
      20 : .t10 = []
      21 : .t9 = .t10
      22 : .t14 = 0
      23 : __tidx__.t11 = .t14
      24 : .t15 = a
      25 : __titer__.t12 = .t15
      26 : .t17 = __titer__.t12
      27 : .t16 = len(.t17)
      28 : __tlen__.t13 = .t16
      29 : SKIP
      31 : .t19 = __tidx__.t11
      32 : .t20 = __tlen__.t13
      33 : .t18 = .t19 < .t20
      58 : iffalse .t18 goto 30
      34 : .t22 = __titer__.t12
      35 : .t23 = __tidx__.t11
      36 : .t21 = .t22[.t23]
      37 : x = .t21
      38 : .t25 = __tidx__.t11
      39 : .t26 = 1
      40 : .t24 = .t25 + .t26
      41 : __tidx__.t11 = .t24
      42 : .t27 = 1
      56 : if .t27 goto 50
      55 : goto 51
      50 : SKIP
      43 : .t29 = .t9
      44 : .t31 = x
      45 : .t32 = []
      46 : .t32 = .t31::.t32
      47 : .t30 = .t32
      49 : .t28 = None
      48 : .t29 = .t29@[.t30]
      54 : goto 52
      51 : SKIP
      53 : goto 52
      52 : SKIP
      57 : goto 29
      30 : SKIP
      59 : return .t9
      64 : goto 62
      61 : SKIP
      63 : goto 62
      62 : SKIP
      67 : .t34 = n
      68 : .t35 = 1
      69 : .t33 = .t34 > .t35
     157 : if .t33 goto 151
     156 : goto 152
     151 : SKIP
      70 : .t37 = perm
      71 : .t38 = a
      72 : .t40 = n
      73 : .t41 = 1
      74 : .t39 = .t40 - .t41
      75 : .t36 := call(.t37, (.t38,.t39))
      76 : b = .t36
      77 : .t42 = []
      78 : l = .t42
      79 : .t44 = []
      80 : .t43 = .t44
      81 : .t48 = 0
      82 : __tidx__.t45 = .t48
      83 : .t49 = a
      84 : __titer__.t46 = .t49
      85 : .t51 = __titer__.t46
      86 : .t50 = len(.t51)
      87 : __tlen__.t47 = .t50
      88 : SKIP
      90 : .t53 = __tidx__.t45
      91 : .t54 = __tlen__.t47
      92 : .t52 = .t53 < .t54
     149 : iffalse .t52 goto 89
      93 : .t56 = __titer__.t46
      94 : .t57 = __tidx__.t45
      95 : .t55 = .t56[.t57]
      96 : x = .t55
      97 : .t59 = __tidx__.t45
      98 : .t60 = 1
      99 : .t58 = .t59 + .t60
     100 : __tidx__.t45 = .t58
     101 : .t61 = 1
     147 : if .t61 goto 141
     146 : goto 142
     141 : SKIP
     102 : .t65 = 0
     103 : __tidx__.t62 = .t65
     104 : .t66 = b
     105 : __titer__.t63 = .t66
     106 : .t68 = __titer__.t63
     107 : .t67 = len(.t68)
     108 : __tlen__.t64 = .t67
     109 : SKIP
     111 : .t70 = __tidx__.t62
     112 : .t71 = __tlen__.t64
     113 : .t69 = .t70 < .t71
     140 : iffalse .t69 goto 110
     114 : .t73 = __titer__.t63
     115 : .t74 = __tidx__.t62
     116 : .t72 = .t73[.t74]
     117 : y = .t72
     118 : .t76 = __tidx__.t62
     119 : .t77 = 1
     120 : .t75 = .t76 + .t77
     121 : __tidx__.t62 = .t75
     122 : .t78 = 1
     138 : if .t78 goto 132
     137 : goto 133
     132 : SKIP
     123 : .t80 = .t43
     124 : .t83 = x
     125 : .t84 = []
     126 : .t84 = .t83::.t84
     127 : .t82 = .t84
     128 : .t85 = y
     129 : .t81 = .t82 + .t85
     131 : .t79 = None
     130 : .t80 = .t80@[.t81]
     136 : goto 134
     133 : SKIP
     135 : goto 134
     134 : SKIP
     139 : goto 109
     110 : SKIP
     145 : goto 143
     142 : SKIP
     144 : goto 143
     143 : SKIP
     148 : goto 88
      89 : SKIP
     150 : return .t43
     155 : goto 153
     152 : SKIP
     154 : goto 153
     153 : SKIP
       3 : .t1 = None
       4 : return .t1

 159 : .t88 = perm
 160 : .t90 = 1
 161 : .t92 = 2
 162 : .t94 = 3
 163 : .t96 = 4
 164 : .t97 = []
 165 : .t97 = .t96::.t97
 166 : .t95 = .t97
 167 : .t95 = .t94::.t95
 168 : .t93 = .t95
 169 : .t93 = .t92::.t93
 170 : .t91 = .t93
 171 : .t91 = .t90::.t91
 172 : .t89 = .t91
 173 : .t98 = 1
 174 : .t87 := call(.t88, (.t89,.t98))
 175 : .t99 = " "
 177 : write .t87
 176 : write .t99
 178 : .t100 = "\n"
 179 : write .t100
 180 : .t86 = None
 181 : .t103 = perm
 182 : .t105 = 1
 183 : .t107 = 2
 184 : .t109 = 3
 185 : .t111 = 4
 186 : .t112 = []
 187 : .t112 = .t111::.t112
 188 : .t110 = .t112
 189 : .t110 = .t109::.t110
 190 : .t108 = .t110
 191 : .t108 = .t107::.t108
 192 : .t106 = .t108
 193 : .t106 = .t105::.t106
 194 : .t104 = .t106
 195 : .t113 = 2
 196 : .t102 := call(.t103, (.t104,.t113))
 197 : .t114 = " "
 199 : write .t102
 198 : write .t114
 200 : .t115 = "\n"
 201 : write .t115
 202 : .t101 = None
 203 : .t118 = perm
 204 : .t120 = 1
 205 : .t122 = 2
 206 : .t124 = 3
 207 : .t126 = 4
 208 : .t127 = []
 209 : .t127 = .t126::.t127
 210 : .t125 = .t127
 211 : .t125 = .t124::.t125
 212 : .t123 = .t125
 213 : .t123 = .t122::.t123
 214 : .t121 = .t123
 215 : .t121 = .t120::.t121
 216 : .t119 = .t121
 217 : .t128 = 3
 218 : .t117 := call(.t118, (.t119,.t128))
 219 : .t129 = " "
 221 : write .t117
 220 : write .t129
 222 : .t130 = "\n"
 223 : write .t130
 224 : .t116 = None
 225 : .t133 = perm
 226 : .t135 = 1
 227 : .t137 = 2
 228 : .t139 = 3
 229 : .t141 = 4
 230 : .t142 = []
 231 : .t142 = .t141::.t142
 232 : .t140 = .t142
 233 : .t140 = .t139::.t140
 234 : .t138 = .t140
 235 : .t138 = .t137::.t138
 236 : .t136 = .t138
 237 : .t136 = .t135::.t136
 238 : .t134 = .t136
 239 : .t143 = 4
 240 : .t132 := call(.t133, (.t134,.t143))
 241 : .t144 = " "
 243 : write .t132
 242 : write .t144
 244 : .t145 = "\n"
 245 : write .t145
 246 : .t131 = None
   2 : HALT

[[1], [2], [3], [4]] 
[[1, 1], [1, 2], [1, 3], [1, 4], [2, 1], [2, 2], [2, 3], [2, 4], [3, 1], [3, 2], [3, 3], [3, 4], [4, 1], [4, 2], [4, 3], [4, 4]] 
[[1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 1], [1, 4, 2], [1, 4, 3], [1, 4, 4], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [2, 4, 1], [2, 4, 2], [2, 4, 3], [2, 4, 4], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [3, 4, 1], [3, 4, 2], [3, 4, 3], [3, 4, 4], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4], [4, 4, 1], [4, 4, 2], [4, 4, 3], [4, 4, 4]] 
[[1, 1, 1, 1], [1, 1, 1, 2], [1, 1, 1, 3], [1, 1, 1, 4], [1, 1, 2, 1], [1, 1, 2, 2], [1, 1, 2, 3], [1, 1, 2, 4], [1, 1, 3, 1], [1, 1, 3, 2], [1, 1, 3, 3], [1, 1, 3, 4], [1, 1, 4, 1], [1, 1, 4, 2], [1, 1, 4, 3], [1, 1, 4, 4], [1, 2, 1, 1], [1, 2, 1, 2], [1, 2, 1, 3], [1, 2, 1, 4], [1, 2, 2, 1], [1, 2, 2, 2], [1, 2, 2, 3], [1, 2, 2, 4], [1, 2, 3, 1], [1, 2, 3, 2], [1, 2, 3, 3], [1, 2, 3, 4], [1, 2, 4, 1], [1, 2, 4, 2], [1, 2, 4, 3], [1, 2, 4, 4], [1, 3, 1, 1], [1, 3, 1, 2], [1, 3, 1, 3], [1, 3, 1, 4], [1, 3, 2, 1], [1, 3, 2, 2], [1, 3, 2, 3], [1, 3, 2, 4], [1, 3, 3, 1], [1, 3, 3, 2], [1, 3, 3, 3], [1, 3, 3, 4], [1, 3, 4, 1], [1, 3, 4, 2], [1, 3, 4, 3], [1, 3, 4, 4], [1, 4, 1, 1], [1, 4, 1, 2], [1, 4, 1, 3], [1, 4, 1, 4], [1, 4, 2, 1], [1, 4, 2, 2], [1, 4, 2, 3], [1, 4, 2, 4], [1, 4, 3, 1], [1, 4, 3, 2], [1, 4, 3, 3], [1, 4, 3, 4], [1, 4, 4, 1], [1, 4, 4, 2], [1, 4, 4, 3], [1, 4, 4, 4], [2, 1, 1, 1], [2, 1, 1, 2], [2, 1, 1, 3], [2, 1, 1, 4], [2, 1, 2, 1], [2, 1, 2, 2], [2, 1, 2, 3], [2, 1, 2, 4], [2, 1, 3, 1], [2, 1, 3, 2], [2, 1, 3, 3], [2, 1, 3, 4], [2, 1, 4, 1], [2, 1, 4, 2], [2, 1, 4, 3], [2, 1, 4, 4], [2, 2, 1, 1], [2, 2, 1, 2], [2, 2, 1, 3], [2, 2, 1, 4], [2, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 3], [2, 2, 2, 4], [2, 2, 3, 1], [2, 2, 3, 2], [2, 2, 3, 3], [2, 2, 3, 4], [2, 2, 4, 1], [2, 2, 4, 2], [2, 2, 4, 3], [2, 2, 4, 4], [2, 3, 1, 1], [2, 3, 1, 2], [2, 3, 1, 3], [2, 3, 1, 4], [2, 3, 2, 1], [2, 3, 2, 2], [2, 3, 2, 3], [2, 3, 2, 4], [2, 3, 3, 1], [2, 3, 3, 2], [2, 3, 3, 3], [2, 3, 3, 4], [2, 3, 4, 1], [2, 3, 4, 2], [2, 3, 4, 3], [2, 3, 4, 4], [2, 4, 1, 1], [2, 4, 1, 2], [2, 4, 1, 3], [2, 4, 1, 4], [2, 4, 2, 1], [2, 4, 2, 2], [2, 4, 2, 3], [2, 4, 2, 4], [2, 4, 3, 1], [2, 4, 3, 2], [2, 4, 3, 3], [2, 4, 3, 4], [2, 4, 4, 1], [2, 4, 4, 2], [2, 4, 4, 3], [2, 4, 4, 4], [3, 1, 1, 1], [3, 1, 1, 2], [3, 1, 1, 3], [3, 1, 1, 4], [3, 1, 2, 1], [3, 1, 2, 2], [3, 1, 2, 3], [3, 1, 2, 4], [3, 1, 3, 1], [3, 1, 3, 2], [3, 1, 3, 3], [3, 1, 3, 4], [3, 1, 4, 1], [3, 1, 4, 2], [3, 1, 4, 3], [3, 1, 4, 4], [3, 2, 1, 1], [3, 2, 1, 2], [3, 2, 1, 3], [3, 2, 1, 4], [3, 2, 2, 1], [3, 2, 2, 2], [3, 2, 2, 3], [3, 2, 2, 4], [3, 2, 3, 1], [3, 2, 3, 2], [3, 2, 3, 3], [3, 2, 3, 4], [3, 2, 4, 1], [3, 2, 4, 2], [3, 2, 4, 3], [3, 2, 4, 4], [3, 3, 1, 1], [3, 3, 1, 2], [3, 3, 1, 3], [3, 3, 1, 4], [3, 3, 2, 1], [3, 3, 2, 2], [3, 3, 2, 3], [3, 3, 2, 4], [3, 3, 3, 1], [3, 3, 3, 2], [3, 3, 3, 3], [3, 3, 3, 4], [3, 3, 4, 1], [3, 3, 4, 2], [3, 3, 4, 3], [3, 3, 4, 4], [3, 4, 1, 1], [3, 4, 1, 2], [3, 4, 1, 3], [3, 4, 1, 4], [3, 4, 2, 1], [3, 4, 2, 2], [3, 4, 2, 3], [3, 4, 2, 4], [3, 4, 3, 1], [3, 4, 3, 2], [3, 4, 3, 3], [3, 4, 3, 4], [3, 4, 4, 1], [3, 4, 4, 2], [3, 4, 4, 3], [3, 4, 4, 4], [4, 1, 1, 1], [4, 1, 1, 2], [4, 1, 1, 3], [4, 1, 1, 4], [4, 1, 2, 1], [4, 1, 2, 2], [4, 1, 2, 3], [4, 1, 2, 4], [4, 1, 3, 1], [4, 1, 3, 2], [4, 1, 3, 3], [4, 1, 3, 4], [4, 1, 4, 1], [4, 1, 4, 2], [4, 1, 4, 3], [4, 1, 4, 4], [4, 2, 1, 1], [4, 2, 1, 2], [4, 2, 1, 3], [4, 2, 1, 4], [4, 2, 2, 1], [4, 2, 2, 2], [4, 2, 2, 3], [4, 2, 2, 4], [4, 2, 3, 1], [4, 2, 3, 2], [4, 2, 3, 3], [4, 2, 3, 4], [4, 2, 4, 1], [4, 2, 4, 2], [4, 2, 4, 3], [4, 2, 4, 4], [4, 3, 1, 1], [4, 3, 1, 2], [4, 3, 1, 3], [4, 3, 1, 4], [4, 3, 2, 1], [4, 3, 2, 2], [4, 3, 2, 3], [4, 3, 2, 4], [4, 3, 3, 1], [4, 3, 3, 2], [4, 3, 3, 3], [4, 3, 3, 4], [4, 3, 4, 1], [4, 3, 4, 2], [4, 3, 4, 3], [4, 3, 4, 4], [4, 4, 1, 1], [4, 4, 1, 2], [4, 4, 1, 3], [4, 4, 1, 4], [4, 4, 2, 1], [4, 4, 2, 2], [4, 4, 2, 3], [4, 4, 2, 4], [4, 4, 3, 1], [4, 4, 3, 2], [4, 4, 3, 3], [4, 4, 3, 4], [4, 4, 4, 1], [4, 4, 4, 2], [4, 4, 4, 3], [4, 4, 4, 4]] 
The number of instructions executed : 13762
